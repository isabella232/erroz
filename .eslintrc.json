{
    "extends": [
        "peerigon/base",
        "peerigon/typescript",
        "peerigon/styles/prefer-arrow",
        "peerigon/styles/prefer-interface"
    ],
    "env": {
        "node": true
    },
    "root": true,
    "rules": {
        "arrow-body-style": "off",
        "arrow-parens": ["error", "as-needed", {
            "requireForBlockBody": false // reports false positives in TypeScript if the function expression is generic
        }],
        "lines-between-class-members": ["error", "always", {
            "exceptAfterSingleLine": true
        }],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "next": "return",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": ["const", "let", "var"]
            },
            {
                "blankLine": "never",
                "next": ["const", "let", "var"],
                "prev": ["const", "let", "var"]
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": "directive"
            },
            {
                "blankLine": "any",
                "next": "directive",
                "prev": "directive"
            },
            {
                "blankLine": "always",
                "next": "function",
                "prev": "*"
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": "function"
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": ["import", "cjs-import"]
            },
            {
                "blankLine": "never",
                "next": ["import", "cjs-import"],
                "prev": ["import", "cjs-import"]
            },
            {
                "blankLine": "always",
                "next": "*",
                "prev": "block-like"
            },
            {
                "blankLine": "always",
                "next": "block-like",
                "prev": "*"
            }
        ], // http://eslint.org/docs/rules/padding-line-between-statements
        "@typescript-eslint/member-delimiter-style": ["error", {
            "multiline": {
                "delimiter": "semi",
                "requireLast": true
            },
            "singleline": {
                "delimiter": "semi",
                "requireLast": false
            }
        }]
    },
    "overrides": [
        {
            "files": ["*.d.ts"],
            "rules": {
                "import/unambiguous": "off", // reports false positives with some TypeScript syntax
                "import/export": "off" // reports false positives with some TypeScript syntax
            }
        }
    ]
}
